# -*- coding: utf-8 -*-
"""clean.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CNrunmLYCUYSl69lcE4jlyvwu-EKK_bU
"""
import pandas as pd
import sweetviz as sv

ARQUIVO = """
https://raw.githubusercontent.com/jumozaga/webScraping/master/livros3.csv
"""

df = pd.read_csv(ARQUIVO, header=None)
df = df.rename(
    columns={
        0: "Titulo",
        1: "Categoria",
        2: "Classificacao",
        3: "Preco",
        4: "Em estoque",
    }
)

# df =pd.read_csv(file, error_bad_lines=False)

# report = sv.analyze(df)
# report.show_html("base.html")

# convertendo a coluna "Preco"
df['Preco'] = df['Preco'].replace('Â£', '')

# Encontrando o maior valor
maior = df["Preco"].max()

# Encontrando menor valor
menor = df.min()["Preco"]

# verificando se o DataFrame não está vazio
if not df.empty:
    livro_max_preco = df[df["Preco"] == maior][
        ["Titulo", "Classificacao", "Preco"]
    ].iloc[0]
    livro_min_preco = df[df["Preco"] == menor][
        ["Titulo", "Classificacao", "Preco"]
    ].iloc[0]


ordenada_preco = df.sort_values("Preco", ascending=False)
ordenada_classificacao = df.sort_values("Classificacao", ascending=True)

# Os 5 mais bem classificados
classificacao_geral = ordenada_classificacao.head(196)[
    ["Titulo", "Categoria", "Classificacao"]
]

# Os 5 mais bem classificados por categoria
top_5 = ordenada_classificacao.groupby("Categoria").apply(lambda x: x.head(5))

# Os mais baratos por categoria
top5_p = ordenada_preco.groupby("Categoria").apply(lambda x: x.tail(5))

filtros = {
    "5 Melhores Avaliados Por categoria": top_5,
    "Top 5 por Preço mais baratos": top5_p,
    "Mais barato": livro_min_preco,
    "Mais caro": livro_max_preco,
}
# df3= pd.DataFrame.from_dict(filtros,orient="columns")
# report2 =sv.analyze(df3)

df3 = pd.DataFrame([livro_max_preco, livro_min_preco])

# svtop5 = sv.analyze(top_5)
# svtop5.show_html("top5.html")

# svtop5p = sv.analyze(top5_p)
# svtop5p.show_html("top5p.html")

print(livro_max_preco)
print(livro_min_preco)
print(ordenada_preco)
print(ordenada_classificacao)
print(classificacao_geral)
print(top_5)
print(top5_p)
print(df3)
